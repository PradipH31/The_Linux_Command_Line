Shell maintains a body of information during shell session called the environment
Some programs use values stored in the environment to adjust their behavior
The shell stores environment variables and shell variables
It also stores aliases and shell functions

printenv
    Outputs the environment variables
    printenv variable
        List the value of a specific variable

set
    Outputs the environment and shell variables, and any defined shell functions
    Probably bash specific
    echo $var
        List the value of a specific variable

alias
    View aliases

Some Environment Variables
    DISPLAY The name of graphical environment
            Usually, :0, meaning first display generated by X server
    EDITOR  Program to use for text editing
    SHELL   Name of shell program
    HOME    Pathname of home directory
    LANG    Define character set and collation order of language
    OLDPWD  Previous working directory
    PAGER   Program for paging output(often /usr/bin/less)
    PATH    A colon separated list of directories searched when an executable program is entered
    PS1     "Prompt String 1"- Shell prompt
    PWD     Current working directory
    TERM    Terminal type(protocol to be used with terminal emulator)
    TZ      Time Zone
    USER    Username

Establishment of the Environment
Startup files define the default environment shared by all users
Then, startup files in our home directory define our personal environment
The exact sequence depends on the type of shell session being started:
    Login Shell Session
        Where we are prompted for username and password(terminal/tty)
    Login Shell read one or more startup files
        /etc/profile    A global configuration script that applies to all users
        ~/.bash_profile A user's personal startup file(can extend or override settings in the global configuration script)
        ~/.bash_login   If bash_profile is not found, bash attempts to read this script
        ~/.profile      If neither bash_profile nor bash_login is found, bash attempts to read this file
                        Default in Debian-based distributions, such as Ubuntu
    Non-Login Shell Session
        When we launch terminal session in the GUI
    Non-Login Shells startup files
        /etc/bash.bashrc    A global configuration script that applies to all users
        ~/.bashrc           A user's personal startup file(can extend or override the settings in the global configuration script)
   
Non-login shells inherit the environment from their parent process, usually a login shell
The ~/.bashrc is the most important startup file from the user's point of view

The shell searches a list of directories that are contained in the PATH variable to execute a program
The PATH variable is most often set by /etc/profile startup file(in ~/.profile in Ubuntu) with this code
PATH=$PATH:$HOME
PATH is modified to add the diectory $HOME/bin to the end of the list
    This is done through PATH expansion
    Example:foo="this is "
            foo=$foo" something"
    Using this technique, we can append text to the end of a variable's contents
This helps us if we want to create a directory to store programs(~/bin)
    Debian based distributions test for existence of ~/bin

Lastly,
    export PATH
        Tells the shell to make the contents of PATH available to child processes of the shell

