nl-Number Lines
    numbers lines, simplest use resembles cat -n
    can accept multiple input streams

    supports a concept called logical pages when numbering, allowing nl to reset numerical sequence when numbering
    possible to set starting number to specific value and to set its format
    logical page further broken down into a header, body, and footer
        within each sections, line numbering may be reset and/or assigned a different style
    treats multiple input streams as a single stream of text
    sections are indicated by markup added to the text

                                nl Markup
    Markup      Meaning
    \:\:\:      Start of logical page header
    \:\:        Start of logical page body
    \:          Start of logical page footer
        Each markup element must appear alone on its own line
        After processing a markup element, nl deletes it from text stream

    nl options
    Option      Meaning
    -b style    Set body numbering to style, which could be:
                a= Number all lines
                t= Number only non-blank lines(default)
                n= None
                pregexp= Number only lines matching bre regexp
    -f style    Set footer numbering to style. Default is n(none)
    -h style    Set header numbering to style. Default is n(none)
    -i number   Set page numbering increment to number. Default is 1
    -n format   Set numbering format to format, which could be:
                ln= Left justified, without leading zeroes
                rn= right justified, without leading zeroes(default)
                rz= right justified, with leading zeroes
    -p          do not reset page numbering at the beginning of each logical page
    -s string   Add string to the end of each line number to create a separator(default is a tab)
    -v number   Set first line number of each logical page to number(default is 1)
    -w width    Set width of the line number field to width(default is 6)

    We won't be using nl that often, but we can look how to combine multiple tools to perform more complex tasks
    We will use nl in the sed script from the sed lesson

				distros-nl.sed
# sed script to produce Linux distribution report

1 i\
\\:\\:\\:\
\
Linux Distributions Report\
\
Name	Ver.	Released\
----	----	--------\
\\:\\:
s/\([0-9]\{2\}\)\/\([0-9]\{2\}\)\/\([0-9]\{4\}\)$/\3-\1-\2/
$ a\
\\:\
\
End of Report
	
    We insert nl logical page markup and added a footer at the end of the report
    sort -k 1,1 -k 2n distros.txt | sed -f distros-nl.sed | nl


fold
	breaks lines of text at specified width
Usage:
	echo "The quick brown fox jumped over the lazy dog." | fold -w 12
	If no width is specified, the default is 80 characters
	The lines break regardless of word boundaries
	-s will cause fold to break the line at last available space before line width is reached

fmt
	also folds text
	does paragraph formatting on the text stream
	fills and joins lines in text while preserving blank lines and indentation
	Usage:
		fmt -w 50 filename
			As indentation and whitespaces are preserved, the output is not as we expected
			To correct this,
		fmt -cw 50 filename
	Options
	Option		Description
	-c			Operate in crown margin mode, this preserves the indentation of first 2 lines of a
				paragraph, subsequent lines are aligned with the indentation of the second line
	-p string	format only the lines beginning wiht prefix string, after formatting, contents of
				string are prefixed to each reformatted line
				example, configs that use # to delineate a comment could be formatted by specifying
				-p '#' so only comments will be formatted
	-s			split-only mode, lines will only be split to fit the specified column width, short
				lines will not be joined to fill lines, useful when joining is not desired like
				source codes
	-u			perform uniform spacing, applies traditional 'typewriter-style' formatting to the
				text, a single space between words and 2 spaces between sentences
				useful to remove justification(padded with spaces to force alignment on both margins)
	-w width	format text to fit within a column width characters wide, default is 75
				fmt actually formats lines slightly shorter than speicified width to allow for line
				balancing
	
pr
	used to paginate text
	when printing, it is desirable to separate pages with several lines of whitespace to provide top and bottom margin
	the whitespace can be used for header and footer
	Usage:
		pr -l 15 -w 65 distros.txt
			-l option for page length and -w for page width
				for a page 65 columns wide and 15 lines long
	pr paginates the contents, separates each page with several lines of whitespace, and creates a default header containing file modification time, filename, and page number

printf
	not used for pipelines nor on the command line
	originally developed for C
	Usage:
		printf "format" arguments
		printf "I formatted the string: %s\n" foo
	format string may contain literal text, escape sequences and sequences beginning with %, called conversion specifications
	conversoin specification is replaced by the argument
	Common printf data type specifiers
	Specifier		Description
	d				Format a number as a signed decimal integer
	f				Format and output a floating-point number
	o				Format an integer as an octal number
	s				Format a string
	x				Format an integer as a hexadecimal number
	X				Same as x but use uppercase
	%				Print a literal % symbol(%%)

	Optional components may be added to the conversion specifier to adjust output
	A complete conversion specification may consist
		%[flags][width][.precision]conversion_specification
		The order must be equal to specified above
	Components of printf
	Component		Description
	flags			5 flags
					#	Use alternate format for output, varies by data type
						for octal, prefix with 0
						for hex, prefix with 0x or 0X
					0	pad output with zeroes
					-	left-align output(default is right align)
					' ' produce a leading space for positive numbers
					+	sign positive numbers(default, printf only signs negative numbers)
	width			minimum field width(total width, not just the whole number)
	.precision		for floats, specify number of digits of precision to be output after decimal
					for strings, specify number of characters to output

	printf is employed to format tabular data, rather than on the command line directly
